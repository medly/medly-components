// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component should render properly as outlined when theme has hover set to false 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Outlined Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly as solid when theme has hover set to false 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Solid Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with "circle" edges 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1.6rem;
  border-radius: 50%;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Flat Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with "rounded" edges 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 100rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Flat Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with "square" edges 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Flat Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with L size and loading state 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1.2rem 2.4rem 1.4rem;
  border-radius: 0.8rem;
  pointer-events: none;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3061B3;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

.c3 {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  font-size: 2.6rem;
  -webkit-animation: jBcSpD 300ms linear;
  animation: jBcSpD 300ms linear;
  -webkit-animation-delay: 200ms;
  animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.c3 stop:first-child {
  stop-color: rgba(255,255,255,0.2);
}

.c3 stop:last-child {
  stop-color: #ffffff;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
    <svg
      class="c3"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="12"
        cy="12"
        r="11"
        stroke="url(#circleColor)"
        stroke-width="2"
      >
        <animatetransform
          attributeName="transform"
          attributeType="XML"
          dur="900ms"
          from="0 12 12"
          repeatCount="indefinite"
          to="360 12 12"
          type="rotate"
        />
      </circle>
      <defs>
        <lineargradient
          id="circleColor"
        >
          <stop
            offset="70%"
            stop-color="#EFF2F4"
          />
          <stop
            offset="95%"
            stop-color="#546A7F"
          />
        </lineargradient>
      </defs>
    </svg>
  </button>
</div>
`;

exports[`Button component should render properly with S size and loading state 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.8rem 2.4rem 1rem;
  border-radius: 0.8rem;
  pointer-events: none;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3061B3;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

.c3 {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  font-size: 2.2rem;
  -webkit-animation: jBcSpD 300ms linear;
  animation: jBcSpD 300ms linear;
  -webkit-animation-delay: 200ms;
  animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.c3 stop:first-child {
  stop-color: rgba(255,255,255,0.2);
}

.c3 stop:last-child {
  stop-color: #ffffff;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
    <svg
      class="c3"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="12"
        cy="12"
        r="11"
        stroke="url(#circleColor)"
        stroke-width="2"
      >
        <animatetransform
          attributeName="transform"
          attributeType="XML"
          dur="900ms"
          from="0 12 12"
          repeatCount="indefinite"
          to="360 12 12"
          type="rotate"
        />
      </circle>
      <defs>
        <lineargradient
          id="circleColor"
        >
          <stop
            offset="70%"
            stop-color="#EFF2F4"
          />
          <stop
            offset="95%"
            stop-color="#546A7F"
          />
        </lineargradient>
      </defs>
    </svg>
  </button>
</div>
`;

exports[`Button component should render properly with any icon at the beginning of the text 1`] = `
.c2 {
  overflow: visible;
  font-size: 2.4rem;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  cursor: inherit;
}

.c2 * {
  fill-opacity: 1;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  fill: #607890;
}

.c4 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c3,
.c0 .c1,
.c0 .c1 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .c1 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .c1 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .c1 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .c1 * {
  fill: #ffffff;
}

.c0 .c1 + .c3 {
  margin-left: 0.8rem;
}

.c0 .c3 + .c1 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <svg
      class="c1 c2"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z"
        fill="#000"
        fill-opacity=".54"
      />
    </svg>
    <span
      class="c3 c4"
    >
      Solid Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with any icon at the end of the text 1`] = `
.c2 {
  overflow: visible;
  font-size: 2.4rem;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  cursor: inherit;
}

.c2 * {
  fill-opacity: 1;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  fill: #607890;
}

.c4 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c3,
.c0 .c1,
.c0 .c1 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .c1 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .c1 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .c1 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .c1 * {
  fill: #ffffff;
}

.c0 .c1 + .c3 {
  margin-left: 0.8rem;
}

.c0 .c3 + .c1 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <svg
      class="c1 c2"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z"
        fill="#000"
        fill-opacity=".54"
      />
    </svg>
    <span
      class="c3 c4"
    >
      Solid Button
    </span>
  </button>
</div>
`;

exports[`Button component should render properly with outlined and theme doesn't have bgColor 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #dfe4e9;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #dfe4e9;
}

.c0:not(:disabled):not(:hover) {
  color: #D73A43;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #D73A43;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #D73A43;
}

.c0:not(:disabled):active {
  color: #97292F;
  background-color: transparent;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #97292F;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #97292F;
}

.c0:not(:disabled):not(:active):hover {
  color: #B73139;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(183,49,57,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #B73139;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #B73139;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Red Button
    </span>
  </button>
</div>
`;

exports[`Button component should wrap children into Text component when rendering string or number 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Some text
    </span>
    <i>
      some icon
    </i>
    <div>
      element2
    </div>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 1.05rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly when it is disabled 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 1.05rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    disabled=""
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly when it is loading 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  pointer-events: none;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 1.05rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

.c3 {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  font-size: 2.2rem;
  -webkit-animation: jBcSpD 300ms linear;
  animation: jBcSpD 300ms linear;
  -webkit-animation-delay: 200ms;
  animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.c3 stop:first-child {
  stop-color: rgba(48,97,179,0.2);
}

.c3 stop:last-child {
  stop-color: #3061B3;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
    <svg
      class="c3"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="12"
        cy="12"
        r="11"
        stroke="url(#circleColor)"
        stroke-width="2"
      >
        <animatetransform
          attributeName="transform"
          attributeType="XML"
          dur="900ms"
          from="0 12 12"
          repeatCount="indefinite"
          to="360 12 12"
          type="rotate"
        />
      </circle>
      <defs>
        <lineargradient
          id="circleColor"
        >
          <stop
            offset="70%"
            stop-color="#EFF2F4"
          />
          <stop
            offset="95%"
            stop-color="#546A7F"
          />
        </lineargradient>
      </defs>
    </svg>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly with "L" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1.2rem 2.4rem 1.4rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 0.85rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly with "M" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 1.05rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly with "S" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.8rem 2.4rem 1rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 0.85rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "flat" variant should render properly with "XS" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.4rem 1.6rem 0.6rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  display: block;
  position: absolute;
  width: 0;
  bottom: 0.85rem;
  left: 50%;
  height: 0.15rem;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.15rem;
  -webkit-transform: translate(-50%);
  -ms-transform: translate(-50%);
  transform: translate(-50%);
}

.c0:disabled {
  color: #98A7B7;
}

.c0:disabled::after {
  background-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
}

.c0:not(:disabled):not(:hover)::after {
  background-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
}

.c0:not(:disabled):active::after {
  background-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):active::after {
  width: calc(100% - 4.8rem);
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  background-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0:not(:disabled):not(:active):hover::after {
  width: calc(100% - 4.8rem);
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly when it is disabled 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    disabled=""
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly when it is loading 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  pointer-events: none;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

.c3 {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  font-size: 2.2rem;
  -webkit-animation: jBcSpD 300ms linear;
  animation: jBcSpD 300ms linear;
  -webkit-animation-delay: 200ms;
  animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.c3 stop:first-child {
  stop-color: rgba(48,97,179,0.2);
}

.c3 stop:last-child {
  stop-color: #3061B3;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
    <svg
      class="c3"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="12"
        cy="12"
        r="11"
        stroke="url(#circleColor)"
        stroke-width="2"
      >
        <animatetransform
          attributeName="transform"
          attributeType="XML"
          dur="900ms"
          from="0 12 12"
          repeatCount="indefinite"
          to="360 12 12"
          type="rotate"
        />
      </circle>
      <defs>
        <lineargradient
          id="circleColor"
        >
          <stop
            offset="70%"
            stop-color="#EFF2F4"
          />
          <stop
            offset="95%"
            stop-color="#546A7F"
          />
        </lineargradient>
      </defs>
    </svg>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly with "L" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1.2rem 2.4rem 1.4rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly with "M" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly with "S" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.8rem 2.4rem 1rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "outlined" variant should render properly with "XS" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.4rem 1.6rem 0.6rem;
  border-radius: 0.8rem;
  background-color: transparent;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0::after {
  content: '';
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: transparent;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  border-radius: 0.8rem;
  border-style: solid;
}

.c0:disabled {
  color: #98A7B7;
  background-color: transparent;
}

.c0:disabled::after {
  border-width: 0.1rem;
  border-color: #98A7B7;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #3872D2;
  background-color: transparent;
}

.c0:not(:disabled):not(:hover)::after {
  border-width: 0.1rem;
  border-color: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #3872D2;
}

.c0:not(:disabled):active {
  color: #275093;
  background-color: #EBF1FA;
}

.c0:not(:disabled):active::after {
  border-width: 0.2rem;
  border-color: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #275093;
}

.c0:not(:disabled):not(:active):hover {
  color: #3061B3;
  background-color: transparent;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover::after {
  border-width: 0.2rem;
  border-color: #3061B3;
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #3061B3;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly when it is disabled 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    disabled=""
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly when it is loading 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  pointer-events: none;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3061B3;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

.c3 {
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  font-size: 2.2rem;
  -webkit-animation: jBcSpD 300ms linear;
  animation: jBcSpD 300ms linear;
  -webkit-animation-delay: 200ms;
  animation-delay: 200ms;
  -webkit-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

.c3 stop:first-child {
  stop-color: rgba(255,255,255,0.2);
}

.c3 stop:last-child {
  stop-color: #ffffff;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
    <svg
      class="c3"
      fill="none"
      height="1em"
      viewBox="0 0 24 24"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <circle
        cx="12"
        cy="12"
        r="11"
        stroke="url(#circleColor)"
        stroke-width="2"
      >
        <animatetransform
          attributeName="transform"
          attributeType="XML"
          dur="900ms"
          from="0 12 12"
          repeatCount="indefinite"
          to="360 12 12"
          type="rotate"
        />
      </circle>
      <defs>
        <lineargradient
          id="circleColor"
        >
          <stop
            offset="70%"
            stop-color="#EFF2F4"
          />
          <stop
            offset="95%"
            stop-color="#546A7F"
          />
        </lineargradient>
      </defs>
    </svg>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly with "L" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1.2rem 2.4rem 1.4rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly with "M" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.6rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.6rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 1rem 2.4rem 1.2rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly with "S" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.8rem 2.4rem 1rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;

exports[`Button component with "solid" variant should render properly with "XS" size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 600;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  border: none;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  padding: 0.4rem 1.6rem 0.6rem;
  border-radius: 0.8rem;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0:hover {
  cursor: pointer;
}

.c0:focus {
  outline: none;
}

.c0:disabled {
  cursor: not-allowed;
}

.c0:disabled {
  color: #98A7B7;
  background: #dfe4e9;
}

.c0:disabled .sc-1pf3x8a-0 * {
  fill: #98A7B7;
}

.c0:not(:disabled):not(:hover) {
  color: #ffffff;
  background: #3872D2;
}

.c0:not(:disabled):not(:hover) .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):active {
  color: #ffffff;
  background: #275093;
}

.c0:not(:disabled):active .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0:not(:disabled):not(:active):hover {
  color: #ffffff;
  background: #3061B3;
  box-shadow: 0 0.2rem 0.8rem rgba(48,97,179,0.35);
}

.c0:not(:disabled):not(:active):hover .sc-1pf3x8a-0 * {
  fill: #ffffff;
}

.c0 .sc-1pf3x8a-0 + .c1 {
  margin-left: 0.8rem;
}

.c0 .c1 + .sc-1pf3x8a-0 {
  margin-left: 0.8rem;
}

<div>
  <button
    class="c0"
    type="button"
  >
    <span
      class="c1 c2"
    >
      Button
    </span>
  </button>
</div>
`;
