// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cell should not render text if hidden property is given 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 0;
  padding: 0;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c0 .c1 {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

<div>
  <td
    class="c0"
    hidden=""
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </td>
</div>
`;

exports[`Cell should render checkbox properly 1`] = `
.c10 {
  overflow: visible;
  font-size: 2.4rem;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  cursor: inherit;
}

.c10 * {
  fill-opacity: 1;
  -webkit-transition: all 100ms linear;
  transition: all 100ms linear;
  fill: #607890;
}

.c3 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c4 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: inherit;
  color: inherit;
  padding: 0 1.6rem;
}

.c8 {
  border: 0.15rem solid;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  border-radius: 22.2%;
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 .c9 {
  pointer-events: none;
  z-index: 1;
  -webkit-transition: all 200ms ease-in-out;
  transition: all 200ms ease-in-out;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  width: 100%;
  height: 100%;
  margin-right: 0.05rem;
}

.c6 {
  opacity: 0;
  margin: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  outline: none;
  position: absolute;
}

.c6:checked ~ .c7 {
  border-color: #126AFA;
  background-color: #126AFA;
}

.c6:checked ~ .c7 .c9 {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c6:checked ~ .c7 .c9 * {
  fill: #ffffff;
}

.c6:not(:checked) ~ .c7 {
  background-color: transparent;
  border-color: #13181D;
}

.c6:not(:disabled):focus ~ .c7 {
  box-shadow: 0 0 0.8rem 0 rgba(18,106,250,0.35);
  border-color: #126AFA;
}

.c6:not(:disabled):focus:not(:checked) ~ .c7 {
  border-color: #126AFA;
}

.c5 {
  margin: 0.3rem;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 1.8rem;
  height: 1.8rem;
  position: relative;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding: 0.8rem 0;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}

.c1 * {
  cursor: pointer;
}

.c1.c1.c1:hover .c7 {
  box-shadow: 0 0 0.8rem 0 rgba(18,106,250,0.35);
  border-color: #126AFA;
}

.c1.c1.c1:active .c7 {
  box-shadow: 0 0 0.8rem 0 rgba(18,106,250,0.5);
  border-color: #0F5AD5;
}

.c0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  padding: 1.2rem 1.6rem;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c0 .c2 {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

<div>
  <td
    class="c0"
  >
    
    <label
      class="c1"
      for="Dummy"
      id="Dummy-wrapper"
      sizes="[object Object]"
    >
      <span
        class="c2 c3 c4"
        id="Dummy-label"
        type="checkbox"
      >
        Dummy
      </span>
      <div
        class="c5"
      >
        <input
          class="c6"
          id="Dummy"
          sizes="[object Object]"
          type="checkbox"
        />
        <div
          class="c7 c8"
        >
          <svg
            class="c9 c10"
            fill="none"
            height="1em"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.795 15.875l-3.47-3.47a.996.996 0 0 0-1.41 0 .996.996 0 0 0 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0l10.58-10.58a.996.996 0 1 0-1.41-1.41l-9.88 9.87z"
              fill="green"
            />
          </svg>
        </div>
      </div>
    </label>
  </td>
</div>
`;

exports[`Cell should render frozen text properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  padding: 1.2rem 1.6rem;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  position: -webkit-sticky;
  position: sticky;
  left: 0;
  z-index: 1;
}

.c0 * {
  z-index: 1;
}

.c0 .c1 {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

<div>
  <td
    class="c0"
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </td>
</div>
`;

exports[`Cell should render text properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  padding: 1.2rem 1.6rem;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c0 .c1 {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

<div>
  <td
    class="c0"
  >
    <span
      class="c1 c2"
    >
      Dummy
    </span>
  </td>
</div>
`;

exports[`Cell should render tooltip properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  overflow: hidden;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  opacity: 1;
  padding: 1.2rem 1.6rem;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c0 .c1 {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

<div>
  <td
    class="c0"
  >
    <span
      class="c1 c2"
      title="hello"
    >
      hello
    </span>
  </td>
</div>
`;
