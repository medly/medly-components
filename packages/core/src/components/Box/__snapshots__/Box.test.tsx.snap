// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Box Component should not render with border if borderColor is not provided 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should not render with border if borderWidth is not provided 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should not render with given shadowColor if shadow size is not present 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly when loading 1`] = `
.c4 {
  font-size: 48px;
}

.c4 * {
  fill: black;
}

.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c3 {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1001;
  position: relative;
}

.c3 > * {
  -webkit-animation: hHgZmL 300ms ease-in;
  animation: hHgZmL 300ms ease-in;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
    <div
      class="c3"
    >
      <svg
        class="c4"
        color="black"
        height="1em"
        viewBox="0 0 100 100"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M31.6 3.5C5.9 13.6-6.6 42.7 3.5 68.4c10.1 25.7 39.2 38.3 64.9 28.1l-3.1-7.9C44 97 19.9 86.6 11.5 65.3c-8.4-21.3 2-45.4 23.3-53.8l-3.2-8z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M42.3 39.6c5.7-4.3 13.9-3.1 18.1 2.7 4.3 5.7 3.1 13.9-2.7 18.1l4.1 5.5c8.8-6.5 10.6-19 4.1-27.7-6.5-8.8-19-10.6-27.7-4.1l4.1 5.5z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="1s"
            from="0 50 50"
            repeatCount="indefinite"
            to="-360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M82 35.7C74.1 18 53.4 10.1 35.7 18S10.1 46.6 18 64.3l7.6-3.4c-6-13.5 0-29.3 13.5-35.3s29.3 0 35.3 13.5l7.6-3.4z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Box Component should render properly with "L" shadow size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.10rem 0.15rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with "M" shadow size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.4rem 0.6rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with "S" shadow size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.1rem 0.3rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with "XL" shadow size 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.20rem 0.25rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with L size and loading state 1`] = `
.c4 {
  font-size: 48px;
}

.c4 * {
  fill: black;
}

.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c3 {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1001;
  position: relative;
}

.c3 > * {
  -webkit-animation: hHgZmL 300ms ease-in;
  animation: hHgZmL 300ms ease-in;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.10rem 0.15rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
    <div
      class="c3"
    >
      <svg
        class="c4"
        color="black"
        height="1em"
        viewBox="0 0 100 100"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M31.6 3.5C5.9 13.6-6.6 42.7 3.5 68.4c10.1 25.7 39.2 38.3 64.9 28.1l-3.1-7.9C44 97 19.9 86.6 11.5 65.3c-8.4-21.3 2-45.4 23.3-53.8l-3.2-8z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M42.3 39.6c5.7-4.3 13.9-3.1 18.1 2.7 4.3 5.7 3.1 13.9-2.7 18.1l4.1 5.5c8.8-6.5 10.6-19 4.1-27.7-6.5-8.8-19-10.6-27.7-4.1l4.1 5.5z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="1s"
            from="0 50 50"
            repeatCount="indefinite"
            to="-360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M82 35.7C74.1 18 53.4 10.1 35.7 18S10.1 46.6 18 64.3l7.6-3.4c-6-13.5 0-29.3 13.5-35.3s29.3 0 35.3 13.5l7.6-3.4z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Box Component should render properly with M size and loading state 1`] = `
.c4 {
  font-size: 48px;
}

.c4 * {
  fill: black;
}

.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c3 {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1001;
  position: relative;
}

.c3 > * {
  -webkit-animation: hHgZmL 300ms ease-in;
  animation: hHgZmL 300ms ease-in;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.4rem 0.6rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
    <div
      class="c3"
    >
      <svg
        class="c4"
        color="black"
        height="1em"
        viewBox="0 0 100 100"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M31.6 3.5C5.9 13.6-6.6 42.7 3.5 68.4c10.1 25.7 39.2 38.3 64.9 28.1l-3.1-7.9C44 97 19.9 86.6 11.5 65.3c-8.4-21.3 2-45.4 23.3-53.8l-3.2-8z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M42.3 39.6c5.7-4.3 13.9-3.1 18.1 2.7 4.3 5.7 3.1 13.9-2.7 18.1l4.1 5.5c8.8-6.5 10.6-19 4.1-27.7-6.5-8.8-19-10.6-27.7-4.1l4.1 5.5z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="1s"
            from="0 50 50"
            repeatCount="indefinite"
            to="-360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M82 35.7C74.1 18 53.4 10.1 35.7 18S10.1 46.6 18 64.3l7.6-3.4c-6-13.5 0-29.3 13.5-35.3s29.3 0 35.3 13.5l7.6-3.4z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Box Component should render properly with S size and loading state 1`] = `
.c4 {
  font-size: 48px;
}

.c4 * {
  fill: black;
}

.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c3 {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1001;
  position: relative;
}

.c3 > * {
  -webkit-animation: hHgZmL 300ms ease-in;
  animation: hHgZmL 300ms ease-in;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.1rem 0.3rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
    <div
      class="c3"
    >
      <svg
        class="c4"
        color="black"
        height="1em"
        viewBox="0 0 100 100"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M31.6 3.5C5.9 13.6-6.6 42.7 3.5 68.4c10.1 25.7 39.2 38.3 64.9 28.1l-3.1-7.9C44 97 19.9 86.6 11.5 65.3c-8.4-21.3 2-45.4 23.3-53.8l-3.2-8z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M42.3 39.6c5.7-4.3 13.9-3.1 18.1 2.7 4.3 5.7 3.1 13.9-2.7 18.1l4.1 5.5c8.8-6.5 10.6-19 4.1-27.7-6.5-8.8-19-10.6-27.7-4.1l4.1 5.5z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="1s"
            from="0 50 50"
            repeatCount="indefinite"
            to="-360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M82 35.7C74.1 18 53.4 10.1 35.7 18S10.1 46.6 18 64.3l7.6-3.4c-6-13.5 0-29.3 13.5-35.3s29.3 0 35.3 13.5l7.6-3.4z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Box Component should render properly with XL size and loading state 1`] = `
.c4 {
  font-size: 48px;
}

.c4 * {
  fill: black;
}

.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c3 {
  height: 100%;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1001;
  position: relative;
}

.c3 > * {
  -webkit-animation: hHgZmL 300ms ease-in;
  animation: hHgZmL 300ms ease-in;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.20rem 0.25rem rgba(0,0,0,0.2);
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
}

.c0 > *:not(:last-child) {
  opacity: 0;
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
    <div
      class="c3"
    >
      <svg
        class="c4"
        color="black"
        height="1em"
        viewBox="0 0 100 100"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M31.6 3.5C5.9 13.6-6.6 42.7 3.5 68.4c10.1 25.7 39.2 38.3 64.9 28.1l-3.1-7.9C44 97 19.9 86.6 11.5 65.3c-8.4-21.3 2-45.4 23.3-53.8l-3.2-8z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M42.3 39.6c5.7-4.3 13.9-3.1 18.1 2.7 4.3 5.7 3.1 13.9-2.7 18.1l4.1 5.5c8.8-6.5 10.6-19 4.1-27.7-6.5-8.8-19-10.6-27.7-4.1l4.1 5.5z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="1s"
            from="0 50 50"
            repeatCount="indefinite"
            to="-360 50 50"
            type="rotate"
          />
        </path>
        <path
          d="M82 35.7C74.1 18 53.4 10.1 35.7 18S10.1 46.6 18 64.3l7.6-3.4c-6-13.5 0-29.3 13.5-35.3s29.3 0 35.3 13.5l7.6-3.4z"
        >
          <animatetransform
            attributeName="transform"
            attributeType="XML"
            dur="2s"
            from="0 50 50"
            repeatCount="indefinite"
            to="360 50 50"
            type="rotate"
          />
        </path>
      </svg>
    </div>
  </div>
</div>
`;

exports[`Box Component should render properly with border 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  border: calc(1 * 0.25rem) solid tomato;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with given bg and color 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: white;
  background-color: black;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="white"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render properly with given height and width 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  width: 100%;
  color: black;
  height: 100%;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
    height="100%"
    width="100%"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render with given margin 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: calc(4 * 0.25rem) calc(2 * 0.25rem);
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render with given padding 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(2 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should render with given shadowColor 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: 0rem 0.4rem 0.6rem tomato;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Box
    </span>
  </div>
</div>
`;

exports[`Box Component should wrap children into Text component when rendering string or number 1`] = `
.c2 {
  margin: 0;
  color: inherit;
  font-size: 1.4rem;
  font-weight: 400;
  -webkit-letter-spacing: 0rem;
  -moz-letter-spacing: 0rem;
  -ms-letter-spacing: 0rem;
  letter-spacing: 0rem;
  line-height: 2.2rem;
  text-align: initial;
}

.c0 {
  color: black;
  background-color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  border-radius: calc(2 * 0.25rem);
  padding: calc(4 * 0.25rem) calc(4 * 0.25rem);
  margin: 0 0;
  box-shadow: none;
}

.c0,
.c0 .c1,
.c0 .sc-1pf3x8a-0,
.c0 .sc-1pf3x8a-0 * {
  -webkit-transition: all 100ms ease-out;
  transition: all 100ms ease-out;
}

.c0 > *:not(:last-child) {
  display: none;
}

.c0:focus {
  outline: none;
}

<div>
  <div
    class="c0"
    color="black"
    display="flex"
    font-variant="body2"
  >
    <span
      class="c1 c2"
    >
      Some text
    </span>
    <i>
      some icon
    </i>
    <div>
      element2
    </div>
  </div>
</div>
`;
